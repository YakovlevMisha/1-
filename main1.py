print("I'm fille 1")
1.
Напишите программу, которая принимает на вход цифру, захватывающую день недели, и предполагается, что этот день выходным.
Пример: - 6 -> да - 7 -> да - 1 -> нет """


определение InputNumbers (входной текст):
    is_OK = Ложь
    пока не is_OK:
        пытаться:
            число = интервал (ввод (f"{inputText}"))
            is_OK = Истина
        кроме ValueError:
            print("Это не число!")
    номер возврата


def checkNumber (число):
    если 6 <= число <= 7:
        распечатать("Да")
    Элиф 0 < число < 6:
        распечатать("нет")
    еще:
        print("число вне пределов 7 дней")


num = InputNumbers("Введите число: ")
контрольное число (число)



2*.
""" Напишите программу проверки достоверности оценок ¬(X ⋁ Y ⋁ Z) = ¬X ⋀ ¬Y ⋀ ¬Z для всех измерений предикат.


деф inputNumbers (x):
    xyz = ["X", "Y", "Z"]
    а = []
    для я в диапазоне (x):
        a.append(input(f"Включить значение {xyz[i]}: "))
    вернуть


def checkPredicate(x):
    слева = нет (x[0] или x[1] или x[2])
    справа = не х[0] и не х[1] и не х[2]
    результат = слева == справа
    вернуть результат


оператор = inputNumbers (3)

если checkPredicate(оператор) == True:
    print(f"Утверждение истины")
еще:
    print(f"Утверждение ложно")

3.
Напишите программу, которая принимает на вход координаты точки (X и Y),
причём X ≠ 0 и Y ≠ 0 и выдаёт номер четверти заднего, в котором находится эта точка (или на какой оси она находится).
Пример: - х=34; у=-30 -> 4 - х=2; у=4->1 - х=-34; у=-30 -> 3 """


деф inputKoord(x):
    а = [0] * х
    для я в диапазоне (x):
        is_OK = Ложь
        пока не is_OK:
            пытаться:
                number = float(input(f"Введите {i+1} координату: "))
                а[я] = число
                is_OK = Истина
                если a[i] == 0:
                    is_OK = Ложь
                    print("Координата не должна быть равна 0")
            кроме ValueError:
                print("Ты ошибся. Вводить надо числа!")
    вернуть


def checkCoordinates (xy):
    текст = 4
    если xy[0] > 0 и xy[1] > 0:
        текст = 1
    Элиф xy[0] < 0 и xy[1] > 0:
        текст = 2
    Элиф xy[0] < 0 и xy[1] < 0:
        текст = 3
    print(f"Точка находится в {text} четверти обратно")


координата = inputKoord(2)
checkCoordinates(координата)


4.
Напишите программу, которая по заданному номеру четверти, показывает диапазон возможных координат точек в этой четверти (x и y)
import random
def chetv(x,y):
    if((x>0)and(y>0)):
        res="первая четврть"
        print(res)
    if((x<0)and(y>0)):
        res = "вторая четврть"
        print(res)
    if((x<0)and(y<=0)):
        res = "третья четврть"
        print(res)
    if((x>0)and(y<0)):
        res = "четвертая четврть"
        print(res)
    return res
 
if __name__ == '__main__':
    x=float(input())
    y= float(input())
    #chetv(x,y)
    for i in range(3):
        chetv(x=random.randint(-10,10),y=random.randint(-10,10))

5.
Напишите программу, которая принимает на вход координаты двух точек и находит расстояние между ними в 2D пространстве
деф inputNumbers (x):
    ху = ["Х", "У"]
    а = []
    для я в диапазоне (x):
        is_OK = Ложь
        пока не is_OK:
            пытаться:
                number = int(input(f"Введите координату по {xy[i]}: "))
                a.append(число)
                is_OK = Истина
            кроме ValueError:
                print("Ты ошибся. Вводить надо целые числа!")
    вернуть


def рассчитатьLengthSegment(a, b):
    lengthSegment = ((b[0] - a[0]) ** 2 + (b[1] - a[1]) ** 2) ** (0,5)
    возвращаемый сегмент длины


print("Введите координаты точки А")
pointA = inputNumbers(2)
print("Введите координаты точки")
pointB = входные числа (2)

print(f"Длина отрезка: {format(calculateLengthSegment(pointA, pointB), '.2f')}")